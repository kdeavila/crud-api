<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="http">crud-api.csproj</projectFile>
    <projectFile profileName="https">crud-api.csproj</projectFile>
    <projectFile>crud-api/crud-api.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9cde5ece-7843-4621-b20f-08e39e0c9bcc" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DpaMonitoringSettings">
    <option name="firstShow" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;kdeavila&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:kdeavila/crud-api.git&quot;,
    &quot;accountId&quot;: &quot;8208b8e8-5b69-4671-bddd-109433eb766b&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/ae7f2ab4cba14312a0d93e2c5adc801b16648/e4/74042d58/JwtSecurityToken.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/6fa05d7dbf2e454ce78b261b422234da1f1ccedee678fd997e5ef4afe6df6e/ControllerBase.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/74be176084e4dacbc4d79c592c99a3a3ad110742bffc3ba0af5540cfa7dc97/ActivatorUtilities.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/8649bccd44969a795a832ab18d4ea6dcdaee9be3c4742cd97f795937152ab9/DbUpdateException.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/b3575a2f41d7c2dbfaa36e866b8a361e11dd7223ff82bc574c1d5d4b7522f735/Future.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/ba408bbefe5c813576b4417369c21d24248b94d040ec72a9753bc546f9308190/OpenApiServiceCollectionExtensions.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/bd1d5c50194fea68ff3559c160230b0ab50f5acf4ce3061bffd6d62958e2182/ExceptionDispatchInfo.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/c4df319e7a6b4eafe890fea08520cf9412a8d289df8bfa8057fc4621f45f6892/ValidationResult.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/f16564c8c4b61e6ea398fe412680c6b795b266584ccf6a362aed712dc4d2b387/WebApplication.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/f5f29f8ad09a2791dd1b4377273475352366e26dff81e2144329cf5411ba16cd/AuthAppBuilderExtensions.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Users/Keyner/Desktop/Dev/crud-api/Program.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/obj/Debug/net9.0/.NETCoreApp,Version=v9.0.AssemblyAttributes.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="HttpClientEndpointsTabState">
    <option name="cachedRequestData" value="&lt;CachedHttpClientTabRequests&gt;&#10;  &lt;entry key=&quot;92cc84cbf8c21b103d6980e6cca61783036be680&quot; value=&quot;###&amp;#10;GET http://localhost:5190/api/Profile/getbyid/{{id}}&quot; /&gt;&#10;&lt;/CachedHttpClientTabRequests&gt;" />
  </component>
  <component name="HttpClientSelectedEnvironments">
    <file url="file://$USER_HOME$/AppData/Local/Temp/whats-new-dir/whats-new.http" environment="test" />
  </component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="Toolset" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2yi5CjxnroBk761oCwAXa6WKCGk" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;.NET Launch Settings Profile.crud-api: http.executor&quot;: &quot;Run&quot;,
    &quot;.NET Launch Settings Profile.crud-api: https.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.crud-api | #1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.crud-api | #2.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.crud-api | #3.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.crud-api | #5.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.crud-api | #6.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.crud-api | Create new employee.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.crud-api | Get all employees.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.crud-api | Get all profiles.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.crud-api | Get one employee by id.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;database.data.extractors.current.export.id&quot;: &quot;Comma-separated (CSV)_id&quot;,
    &quot;database.data.extractors.current.id&quot;: &quot;Comma-separated (CSV)_id&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;terminal&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="?" />
      <command value="b" />
      <command value="t" />
    </option>
  </component>
  <component name="RunDashboard">
    <option name="excludedTypes">
      <set>
        <option value="HttpClient.HttpRequestRunConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected=".NET Launch Settings Profile.crud-api: http">
    <configuration name="crud-api" type="DotNetProject" factoryName=".NET Project">
      <option name="EXE_PATH" value="" />
      <option name="PROGRAM_PARAMETERS" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="ENV_FILE_PATHS" value="" />
      <option name="REDIRECT_INPUT_PATH" value="" />
      <option name="PTY_MODE" value="Auto" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="AUTO_ATTACH_CHILDREN" value="0" />
      <option name="MIXED_MODE_DEBUG" value="0" />
      <option name="PROJECT_PATH" value="$PROJECT_DIR$/crud-api/crud-api.csproj" />
      <option name="PROJECT_EXE_PATH_TRACKING" value="1" />
      <option name="PROJECT_ARGUMENTS_TRACKING" value="1" />
      <option name="PROJECT_WORKING_DIRECTORY_TRACKING" value="1" />
      <option name="PROJECT_KIND" value="DotNetCore" />
      <option name="PROJECT_TFM" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="crud-api | Create new employee" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/crud-api.http" executionIdentifier="Create new employee" index="4" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="crud-api | Get all employees" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/crud-api.http" executionIdentifier="Get all employees" index="2" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="crud-api | Get all profiles" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/crud-api.http" executionIdentifier="Get all profiles" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="crud-api | Get one employee by id" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/crud-api.http" executionIdentifier="Get one employee by id" index="3" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="crud-api | #5" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/crud-api.http" executionIdentifier="#5" index="5" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="crud-api: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/crud-api/crud-api.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="crud-api: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/crud-api.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration default="true" type="ShConfigurationType">
      <option name="SCRIPT_TEXT" value="" />
      <option name="INDEPENDENT_SCRIPT_PATH" value="true" />
      <option name="SCRIPT_PATH" value="" />
      <option name="SCRIPT_OPTIONS" value="" />
      <option name="INDEPENDENT_SCRIPT_WORKING_DIRECTORY" value="true" />
      <option name="SCRIPT_WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="INDEPENDENT_INTERPRETER_PATH" value="true" />
      <option name="INTERPRETER_PATH" value="powershell.exe" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="EXECUTE_IN_TERMINAL" value="true" />
      <option name="EXECUTE_SCRIPT_FILE" value="true" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.crud-api | Get all profiles" />
        <item itemvalue="HTTP Request.crud-api | Get all employees" />
        <item itemvalue="HTTP Request.crud-api | Create new employee" />
        <item itemvalue="HTTP Request.crud-api | #5" />
        <item itemvalue="HTTP Request.crud-api | Get one employee by id" />
      </list>
    </recent_temporary>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9cde5ece-7843-4621-b20f-08e39e0c9bcc" name="Changes" comment="" />
      <created>1750304429976</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1750304429976</updated>
      <workItem from="1750304432476" duration="7765000" />
      <workItem from="1750394244965" duration="5421000" />
      <workItem from="1750479718013" duration="5352000" />
      <workItem from="1750565675985" duration="1346000" />
      <workItem from="1750567114081" duration="170000" />
      <workItem from="1750567303500" duration="8545000" />
      <workItem from="1750637759585" duration="1401000" />
      <workItem from="1750639970362" duration="4638000" />
      <workItem from="1750652147873" duration="5264000" />
      <workItem from="1750693256226" duration="6288000" />
      <workItem from="1750996914160" duration="1246000" />
      <workItem from="1751077274743" duration="2393000" />
      <workItem from="1751083431598" duration="8075000" />
      <workItem from="1751175445301" duration="3265000" />
      <workItem from="1751224959200" duration="6392000" />
      <workItem from="1751341946570" duration="291000" />
      <workItem from="1751403044348" duration="7269000" />
      <workItem from="1751415009034" duration="2795000" />
      <workItem from="1751431427712" duration="147000" />
      <workItem from="1751431777979" duration="6827000" />
      <workItem from="1751476968296" duration="18036000" />
      <workItem from="1751575727409" duration="1595000" />
      <workItem from="1751742205965" duration="6304000" />
      <workItem from="1751749599938" duration="1503000" />
      <workItem from="1751815982082" duration="8362000" />
      <workItem from="1751985162304" duration="8999000" />
      <workItem from="1752000301129" duration="2275000" />
      <workItem from="1752079708322" duration="6876000" />
      <workItem from="1752206355462" duration="5540000" />
      <workItem from="1752212221873" duration="293000" />
      <workItem from="1752248595144" duration="11000" />
      <workItem from="1752249265985" duration="3316000" />
      <workItem from="1752374489884" duration="2959000" />
      <workItem from="1752515140836" duration="4496000" />
      <workItem from="1752641249759" duration="1268000" />
      <workItem from="1752686132524" duration="1368000" />
      <workItem from="1752687529179" duration="4788000" />
      <workItem from="1753132357015" duration="4427000" />
    </task>
    <task id="LOCAL-00001" summary="Initial commit">
      <option name="closed" value="true" />
      <created>1750305338567</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1750305338567</updated>
    </task>
    <task id="LOCAL-00002" summary="Add a db context and the first get endpoint: profile/list">
      <option name="closed" value="true" />
      <created>1750312186098</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1750312186098</updated>
    </task>
    <task id="LOCAL-00003" summary="Add a DTO to the ProfileController, return only interesting data">
      <option name="closed" value="true" />
      <created>1750394975537</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1750394975537</updated>
    </task>
    <task id="LOCAL-00004" summary="Add EmployeeController with DTO, endpoints, and related HTTP requests">
      <option name="closed" value="true" />
      <created>1750399663230</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1750399663230</updated>
    </task>
    <task id="LOCAL-00005" summary="Configure entity relationships and seed initial data in AppDbContext">
      <option name="closed" value="true" />
      <created>1750481758539</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1750481758539</updated>
    </task>
    <task id="LOCAL-00006" summary="Enhance EmployeeController with edit and delete endpoints, return detailed data on creation">
      <option name="closed" value="true" />
      <created>1750485603129</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1750485603129</updated>
    </task>
    <task id="LOCAL-00007" summary="Refactor ProfileController to use ProfileService, introduce ProfileService, and improve HTTP request examples">
      <option name="closed" value="true" />
      <created>1750568216578</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1750568216578</updated>
    </task>
    <task id="LOCAL-00008" summary="Refactor EmployeeController to leverage EmployeeService, introduce EmployeeService, update HTTP requests, and improve endpoint naming consistency">
      <option name="closed" value="true" />
      <created>1750575861394</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1750575861394</updated>
    </task>
    <task id="LOCAL-00009" summary="Add data annotations to Employee and Profile entities, improve validation and immutability">
      <option name="closed" value="true" />
      <created>1750641627632</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1750641627632</updated>
    </task>
    <task id="LOCAL-00010" summary="Refactor DTOs and controllers for consistency, enhance validation with data annotations, and update related services and HTTP requests accordingly">
      <option name="closed" value="true" />
      <created>1750643714653</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1750643714653</updated>
    </task>
    <task id="LOCAL-00011" summary="Introduce `ServiceResultStatus` and `EmployeeServiceResult` for improved service response handling, refactor controllers to standardize endpoint routes, and enhance validation across EmployeeService and controllers.">
      <option name="closed" value="true" />
      <created>1750656698193</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1750656698193</updated>
    </task>
    <task id="LOCAL-00012" summary="Remove `.idea/` file to clean unnecessary IDE-specific configuration and delete WeatherForecast and WeatherForecastController">
      <option name="closed" value="true" />
      <created>1750693825330</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1750693825330</updated>
    </task>
    <task id="LOCAL-00013" summary="Add CRUD operations for Profile, extend ProfileService and ProfileController, and enhance validation handling">
      <option name="closed" value="true" />
      <created>1750699019135</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1750699019135</updated>
    </task>
    <task id="LOCAL-00014" summary="Update README.md with Profile CRUD details and enhance documentation on validation and API responses">
      <option name="closed" value="true" />
      <created>1750997084761</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1750997084761</updated>
    </task>
    <task id="LOCAL-00015" summary="Implement authentication feature with JWT:  &#10;- Add `User` entity, authentication controller, and login endpoint.  &#10;- Introduce `AuthService` for JWT token generation and authentication logic.  &#10;- Add `JwtSettings` configuration and integrate JWT authentication middleware.  &#10;- Update database context and migrations to include `User` entity.  &#10;- Enhance project dependencies with JWT-related packages.">
      <option name="closed" value="true" />
      <created>1751091622851</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1751091622851</updated>
    </task>
    <task id="LOCAL-00016" summary="Add user authentication with login and registration endpoints:&#10;- Extend `AuthController` to include `Register` method and enhance `Login` functionality.&#10;- Implement authentication logic in `AuthService` with JWT generation and password hashing.&#10;- Add `UserRegisterDto` for registration input validation.&#10;- Utilize `BCrypt.Net` for password hashing.&#10;- Apply `Authorize` attribute to protect Profile and Employee endpoints.&#10;- Update dependencies and inject `AuthService` into DI.">
      <option name="closed" value="true" />
      <created>1751178723309</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1751178723309</updated>
    </task>
    <task id="LOCAL-00017" summary="Introduce role-based authorization:&#10;- Define `UserRole` enum and update `User` entity with default role.&#10;- Enforce role-based access control in controllers using `[Authorize(Roles)]`.&#10;- Update authentication logic in `AuthService` to include user roles in JWT.&#10;- Add admin seeding logic for development.&#10;- Adjust database migrations, DTOs, and services to support role-based authorization.">
      <option name="closed" value="true" />
      <created>1751230851347</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1751230851347</updated>
    </task>
    <task id="LOCAL-00018" summary="Add `IsValidEnumAttribute` to validate enum values and configure JSON serialization for enums&#10;&#10;- Introduce `IsValidEnumAttribute` for validating enum values in DTOs.&#10;- Apply the new attribute to `UserRegisterDto` to validate the `Role` property.&#10;- Update `Program.cs` to add `JsonStringEnumConverter` for JSON enum serialization.">
      <option name="closed" value="true" />
      <created>1751231926464</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1751231926464</updated>
    </task>
    <task id="LOCAL-00019" summary="Update README.md with authentication, role-based authorization, and security details">
      <option name="closed" value="true" />
      <created>1751342104672</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1751342104672</updated>
    </task>
    <task id="LOCAL-00020" summary="Refactor Employee API to include pagination response object&#10;&#10;- Add `PaginatedResultDto` for standardizing paginated responses.&#10;- Update `EmployeeService.GetAllPaginatedAndFiltered` to return `PaginatedResultDto` instead of a list.&#10;- Adjust `EmployeeController` to handle updated service response.">
      <option name="closed" value="true" />
      <created>1751431841647</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1751431841647</updated>
    </task>
    <task id="LOCAL-00021" summary="Refactor service result handling:&#10;&#10;- Consolidate `EmployeeServiceResult` and `ProfileServiceResult` into a generic `ServiceResult&lt;T&gt;` for reusability.&#10;- Update `EmployeeService` and `ProfileService` methods to use `ServiceResult&lt;T&gt;`.&#10;- Adjust `EmployeeController` to handle new `ServiceResult` structure.&#10;- Fix nullability warnings in `Program.cs`.">
      <option name="closed" value="true" />
      <created>1751434417622</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1751434417622</updated>
    </task>
    <task id="LOCAL-00022" summary="Refactor employee salary data type to `decimal` and enhance query parameter handling:&#10;&#10;- Update `Employee`, `EmployeeDto`, and related services to use `decimal` for Salary.&#10;- Introduce `QueryParamsDto` for consolidating common query parameters.&#10;- Refactor `EmployeeQueryParamsDto` to include `QueryParamsDto`.&#10;- Adjust `EmployeeService` to handle updated query parameter structure.">
      <option name="closed" value="true" />
      <created>1751437041134</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1751437041134</updated>
    </task>
    <task id="LOCAL-00023" summary="Add pagination and filtering to Profile API:&#10;&#10;- Introduce `ProfileQueryParams` to handle query parameters for filtering and pagination.&#10;- Update `ProfileController.GetAll` to accept query parameters and handle paginated responses.&#10;- Enhance `ProfileService` with filtering, sorting, and pagination logic.&#10;- Return paginated results in a standardized format using `PaginatedResultDto`.">
      <option name="closed" value="true" />
      <created>1751438134903</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1751438134903</updated>
    </task>
    <task id="LOCAL-00024" summary="Refactor Employee salary data type to `decimal`:&#10;&#10;- Update `Employee` and migration files to change `Salary` from `int` to `decimal`.&#10;- Adjust database schema to reflect type change.&#10;- Update README.md with enhanced features and tools for API interaction.&#10;- Add Insomnia collection for API testing.">
      <option name="closed" value="true" />
      <created>1751438830308</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1751438830308</updated>
    </task>
    <task id="LOCAL-00025" summary="Add User API with pagination, filtering, and role-based authorization:&#10;&#10;- Introduce `UserController` with endpoints for fetching users and their details.&#10;- Add `UserService` for handling user data with filtering, sorting, and pagination logic.&#10;- Create `UserDto` and `UserQueryParamsDto` for request and response data handling.&#10;- Enforce role-based access control using `[Authorize(Roles = &quot;Admin&quot;)]`.">
      <option name="closed" value="true" />
      <created>1751483357468</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1751483357468</updated>
    </task>
    <task id="LOCAL-00026" summary="Refactor `DTOs` into specific namespaces and update references across the project:  &#10;&#10;- Organize `DTOs` into feature-specific namespaces (`Auth`, `Common`, `Employee`, `User`, `Profile`).  &#10;- Update all controllers (`AuthController`, `ProfileController`, `EmployeeController`, `UserController`) and services to reference the new namespaces.  &#10;- Register `UserService` in `Program.cs`.  &#10;- Fix casing inconsistencies in `DTOs` namespace declarations.">
      <option name="closed" value="true" />
      <created>1751485924747</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1751485924747</updated>
    </task>
    <task id="LOCAL-00027" summary="Refactor `Profile` and `Employee` APIs DTOs and enhance service methods:&#10;&#10;- Introduce new `CreateDto`, `UpdateDto`, and `GetDto` for `Profile` and `Employee` entities.&#10;- Update `ProfileController`, `EmployeeController`, and respective services to handle new DTOs.&#10;- Refactor service methods to improve input validation and error handling using `ServiceResult&lt;T&gt;`.&#10;- Standardize response structure across APIs.&#10;- Rename `ProfileDto` and `EmployeeDto` to `ProfileGetDto` and `EmployeeGetDto` for clarity.">
      <option name="closed" value="true" />
      <created>1751490942127</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1751490942127</updated>
    </task>
    <task id="LOCAL-00028" summary="Refactor User API and enhance service methods:&#10;&#10;- Introduce `UserUpdateDto` and `UserGetDto` for update and response handling.&#10;- Add `UserController` endpoints for update and delete operations.&#10;- Update `UserService` to include update and delete logic with enhanced error handling.&#10;- Refactor `ProfileService` and `EmployeeService` delete methods to return `ServiceResult&lt;bool&gt;` for consistency.&#10;- Standardize DTO names for clarity (`UserDto` to `UserGetDto`).">
      <option name="closed" value="true" />
      <created>1751495883413</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1751495883413</updated>
    </task>
    <task id="LOCAL-00029" summary="Update Insomnia collection with new `User` API endpoints and adjusted parameters&#10;&#10;- Add `User API` endpoints: update, delete, get all, and get by ID.&#10;- Update `Employee` and `Auth` endpoints with modified payloads and corrected URLs.&#10;- Introduce example query parameters for `User` API. &#10;- Refactor request metadata for consistency.">
      <option name="closed" value="true" />
      <created>1751496520929</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1751496520929</updated>
    </task>
    <task id="LOCAL-00030" summary="Update README.md: Refactor and enhance project description, key features, and user API details">
      <option name="closed" value="true" />
      <created>1751576506333</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1751576506333</updated>
    </task>
    <task id="LOCAL-00031" summary="Enhance global error handling and improve development exception diagnostics.">
      <option name="closed" value="true" />
      <created>1751749640418</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1751749640418</updated>
    </task>
    <task id="LOCAL-00032" summary="Introduce error handling enhancements and add `ErrorResponseDto`:&#10;&#10;- Add `ErrorResponseDto` for standardized error responses.&#10;- Enhance `EmployeeService.Create` with detailed SQL exception handling and logging.&#10;- Update `ServiceResultStatus` to include new `Error` status.&#10;- Change default environment to `Production` in launch settings for deployment readiness.&#10;- Refactor `Program.cs` to utilize `ErrorResponseDto` for global exception handling.">
      <option name="closed" value="true" />
      <created>1751836063730</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1751836063730</updated>
    </task>
    <task id="LOCAL-00033" summary="Refactor `EmployeeController` to utilize `BaseController` for streamlined service result processing:&#10;&#10;- Introduce `BaseController` with helper methods for consistent service result handling.&#10;- Update `EmployeeController` endpoints to use `BaseController` methods.&#10;- Add new `ServiceResultStatus` values (`Created`, `Unauthorized`, `Forbidden`) for expanded status handling.&#10;- Simplify action result logic for improved readability and maintainability.">
      <option name="closed" value="true" />
      <created>1751840526340</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1751840526340</updated>
    </task>
    <task id="LOCAL-00034" summary="Refactor `ProfileController` and `EmployeeService` for streamlined service result processing and enhanced error handling:&#10;&#10;- Update `ProfileController` to inherit from `BaseController` and utilize helper methods for consistent service result handling.&#10;- Simplify action result logic across all endpoints in `ProfileController`.&#10;- Enhance `EmployeeService` with reactivated profile existence checks and improved SQL exception handling.&#10;- Update `ProfileService` for clearer input validation and consistent return structures.&#10;- Adjust `ErrorResponseDto` to make `Message` property nullable.">
      <option name="closed" value="true" />
      <created>1751989091844</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1751989091844</updated>
    </task>
    <task id="LOCAL-00035" summary="Refactor `UserController` and `UserService` for streamlined service result processing and enhanced input validation:&#10;&#10;- Update `UserController` to inherit from `BaseController` and utilize `ProcessServiceResult` for consistent response handling.&#10;- Simplify action result logic across all endpoints in `UserController`.&#10;- Enhance `UserService.Update` method with input validation for ID consistency.">
      <option name="closed" value="true" />
      <created>1751991612461</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1751991612461</updated>
    </task>
    <task id="LOCAL-00036" summary="Refactor `EmployeeService` and enhance update logic:&#10;&#10;- Improve SQL exception handling with detailed error cases for update operations.&#10;- Add enhanced input validation for profile existence and ID consistency in `Update` method.&#10;- Simplify query logic and avoid redundant checks.&#10;- Remove unused `ILogger` dependency.&#10;- Add meaningful logging for easier debugging.">
      <option name="closed" value="true" />
      <created>1752001153758</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1752001153758</updated>
    </task>
    <task id="LOCAL-00037" summary="Enhance `EmployeeService` error handling and logging:&#10;&#10;- Update `Create` method to use `ServiceResultStatus.Created`.&#10;- Add detailed logging and error handling for `Update` and `Delete` methods, covering unforeseen exceptions and specific SQL errors.&#10;- Improve `Delete` method to handle foreign key violations with meaningful status and messages.">
      <option name="closed" value="true" />
      <created>1752080129790</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1752080129791</updated>
    </task>
    <task id="LOCAL-00038" summary="Add `Deleted` status to `ServiceResultStatus` and update services:&#10;&#10;- Introduce `Deleted` status in `ServiceResultStatus` for representing deletions.&#10;- Update `UserService`, `ProfileService`, and `EmployeeService` to use `ServiceResultStatus.Deleted` for delete operations.&#10;- Extend `BaseController` to handle `Deleted` status with `NoContent` response.&#10;- Change default environment in `launchSettings.json` to `Development` for local testing.">
      <option name="closed" value="true" />
      <created>1752083458083</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1752083458083</updated>
    </task>
    <task id="LOCAL-00039" summary="Enhance `ProfileService` error handling and logging:&#10;&#10;- Add `ILogger` dependency for logging across `ProfileService`.&#10;- Update `Create` method to handle specific SQL errors (e.g., unique constraint violations) with meaningful logging.&#10;- Introduce fallback logging for unexpected database and general exceptions.&#10;- Adjust ordering logic by removing redundant ID case.">
      <option name="closed" value="true" />
      <created>1752089252899</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1752089252899</updated>
    </task>
    <task id="LOCAL-00040" summary="Improve `ProfileService` error handling and logging for `Update` and `Delete` operations:&#10;&#10;- Add detailed exception handling for SQL errors, including unique constraint and foreign key violations.&#10;- Introduce meaningful logging for database errors and unexpected exceptions.&#10;- Enhance user feedback with precise error messages.">
      <option name="closed" value="true" />
      <created>1752209351375</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1752209351375</updated>
    </task>
    <task id="LOCAL-00041" summary="Enhance `UserService` error handling and logging:&#10;&#10;- Add detailed exception handling for SQL errors in `Update` and `Delete` methods, including unique constraint and foreign key violations.&#10;- Introduce `ILogger` dependency for improved logging.&#10;- Update user feedback with clear and comprehensive error messages.&#10;- Adjust ordering logic by removing redundant `ID` case in query.">
      <option name="closed" value="true" />
      <created>1752210988304</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1752210988304</updated>
    </task>
    <task id="LOCAL-00042" summary="Add `OnDelete.Restrict` to `Employee` foreign key with `Profile`:&#10;&#10;- Updated `Employee`-`Profile` FK to use `Restrict` behavior instead of `Cascade`.&#10;- Modified `AppDbContext` and related EF Core migration files to reflect this change.&#10;- Adjusted `AppDbContextModelSnapshot` for FK update.">
      <option name="closed" value="true" />
      <created>1752252534090</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1752252534090</updated>
    </task>
    <task id="LOCAL-00043" summary="Implement service interfaces for `ProfileService`, `UserService`, and `EmployeeService`:&#10;&#10;- Define `IProfileService`, `IUserService`, and `IEmployeeService` interfaces for service abstraction.&#10;- Update corresponding controllers to depend on interfaces instead of concrete implementations.&#10;- Refactor `Program.cs` to register services with their interfaces.&#10;- Adjust service classes to implement their respective interfaces for better dependency injection support.">
      <option name="closed" value="true" />
      <created>1752376509433</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1752376509433</updated>
    </task>
    <task id="LOCAL-00044" summary="Implement `IAuthService` interface:&#10;&#10;- Define `IAuthService` interface to abstract authentication logic.&#10;- Refactor `AuthController` and `AuthService` to utilize `IAuthService` for improved dependency injection.&#10;- Register `IAuthService` with `AuthService` in `Program.cs`.">
      <option name="closed" value="true" />
      <created>1752377681478</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1752377681478</updated>
    </task>
    <task id="LOCAL-00045" summary="Add Swagger for API documentation:&#10;&#10;- Integrate `Swashbuckle.AspNetCore` package for Swagger support.&#10;- Configure Swagger with JWT authentication via `AddSwaggerGen`.&#10;- Replace `AddOpenApi` with detailed Swagger setup.&#10;- Enable Swagger and Swagger UI in Development environment.&#10;- Update README to reflect Swagger implementation.">
      <option name="closed" value="true" />
      <created>1752520094183</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1752520094183</updated>
    </task>
    <task id="LOCAL-00046" summary="Add two folder, crud-api and crud-api.UnitTests. Divide behavior and change responsabilities, add new solution (.sln)">
      <option name="closed" value="true" />
      <created>1753138513981</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1753138513981</updated>
    </task>
    <option name="localTasksCounter" value="47" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="Refactor Employee salary data type to `decimal`:&#10;&#10;- Update `Employee` and migration files to change `Salary` from `int` to `decimal`.&#10;- Adjust database schema to reflect type change.&#10;- Update README.md with enhanced features and tools for API interaction.&#10;- Add Insomnia collection for API testing." />
    <MESSAGE value="Add User API with pagination, filtering, and role-based authorization:&#10;&#10;- Introduce `UserController` with endpoints for fetching users and their details.&#10;- Add `UserService` for handling user data with filtering, sorting, and pagination logic.&#10;- Create `UserDto` and `UserQueryParamsDto` for request and response data handling.&#10;- Enforce role-based access control using `[Authorize(Roles = &quot;Admin&quot;)]`." />
    <MESSAGE value="Refactor `DTOs` into specific namespaces and update references across the project:  &#10;&#10;- Organize `DTOs` into feature-specific namespaces (`Auth`, `Common`, `Employee`, `User`, `Profile`).  &#10;- Update all controllers (`AuthController`, `ProfileController`, `EmployeeController`, `UserController`) and services to reference the new namespaces.  &#10;- Register `UserService` in `Program.cs`.  &#10;- Fix casing inconsistencies in `DTOs` namespace declarations." />
    <MESSAGE value="Refactor `Profile` and `Employee` APIs DTOs and enhance service methods:&#10;&#10;- Introduce new `CreateDto`, `UpdateDto`, and `GetDto` for `Profile` and `Employee` entities.&#10;- Update `ProfileController`, `EmployeeController`, and respective services to handle new DTOs.&#10;- Refactor service methods to improve input validation and error handling using `ServiceResult&lt;T&gt;`.&#10;- Standardize response structure across APIs.&#10;- Rename `ProfileDto` and `EmployeeDto` to `ProfileGetDto` and `EmployeeGetDto` for clarity." />
    <MESSAGE value="Refactor User API and enhance service methods:&#10;&#10;- Introduce `UserUpdateDto` and `UserGetDto` for update and response handling.&#10;- Add `UserController` endpoints for update and delete operations.&#10;- Update `UserService` to include update and delete logic with enhanced error handling.&#10;- Refactor `ProfileService` and `EmployeeService` delete methods to return `ServiceResult&lt;bool&gt;` for consistency.&#10;- Standardize DTO names for clarity (`UserDto` to `UserGetDto`)." />
    <MESSAGE value="Update Insomnia collection with new `User` API endpoints and adjusted parameters&#10;&#10;- Add `User API` endpoints: update, delete, get all, and get by ID.&#10;- Update `Employee` and `Auth` endpoints with modified payloads and corrected URLs.&#10;- Introduce example query parameters for `User` API. &#10;- Refactor request metadata for consistency." />
    <MESSAGE value="Update README.md: Refactor and enhance project description, key features, and user API details" />
    <MESSAGE value="Enhance global error handling and improve development exception diagnostics." />
    <MESSAGE value="Introduce error handling enhancements and add `ErrorResponseDto`:&#10;&#10;- Add `ErrorResponseDto` for standardized error responses.&#10;- Enhance `EmployeeService.Create` with detailed SQL exception handling and logging.&#10;- Update `ServiceResultStatus` to include new `Error` status.&#10;- Change default environment to `Production` in launch settings for deployment readiness.&#10;- Refactor `Program.cs` to utilize `ErrorResponseDto` for global exception handling." />
    <MESSAGE value="Refactor `EmployeeController` to utilize `BaseController` for streamlined service result processing:&#10;&#10;- Introduce `BaseController` with helper methods for consistent service result handling.&#10;- Update `EmployeeController` endpoints to use `BaseController` methods.&#10;- Add new `ServiceResultStatus` values (`Created`, `Unauthorized`, `Forbidden`) for expanded status handling.&#10;- Simplify action result logic for improved readability and maintainability." />
    <MESSAGE value="Refactor `ProfileController` and `EmployeeService` for streamlined service result processing and enhanced error handling:&#10;&#10;- Update `ProfileController` to inherit from `BaseController` and utilize helper methods for consistent service result handling.&#10;- Simplify action result logic across all endpoints in `ProfileController`.&#10;- Enhance `EmployeeService` with reactivated profile existence checks and improved SQL exception handling.&#10;- Update `ProfileService` for clearer input validation and consistent return structures.&#10;- Adjust `ErrorResponseDto` to make `Message` property nullable." />
    <MESSAGE value="Refactor `UserController` and `UserService` for streamlined service result processing and enhanced input validation:&#10;&#10;- Update `UserController` to inherit from `BaseController` and utilize `ProcessServiceResult` for consistent response handling.&#10;- Simplify action result logic across all endpoints in `UserController`.&#10;- Enhance `UserService.Update` method with input validation for ID consistency." />
    <MESSAGE value="Refactor `EmployeeService` and enhance update logic:&#10;&#10;- Improve SQL exception handling with detailed error cases for update operations.&#10;- Add enhanced input validation for profile existence and ID consistency in `Update` method.&#10;- Simplify query logic and avoid redundant checks.&#10;- Remove unused `ILogger` dependency.&#10;- Add meaningful logging for easier debugging." />
    <MESSAGE value="Enhance `EmployeeService` error handling and logging:&#10;&#10;- Update `Create` method to use `ServiceResultStatus.Created`.&#10;- Add detailed logging and error handling for `Update` and `Delete` methods, covering unforeseen exceptions and specific SQL errors.&#10;- Improve `Delete` method to handle foreign key violations with meaningful status and messages." />
    <MESSAGE value="Add `Deleted` status to `ServiceResultStatus` and update services:&#10;&#10;- Introduce `Deleted` status in `ServiceResultStatus` for representing deletions.&#10;- Update `UserService`, `ProfileService`, and `EmployeeService` to use `ServiceResultStatus.Deleted` for delete operations.&#10;- Extend `BaseController` to handle `Deleted` status with `NoContent` response.&#10;- Change default environment in `launchSettings.json` to `Development` for local testing." />
    <MESSAGE value="Enhance `ProfileService` error handling and logging:&#10;&#10;- Add `ILogger` dependency for logging across `ProfileService`.&#10;- Update `Create` method to handle specific SQL errors (e.g., unique constraint violations) with meaningful logging.&#10;- Introduce fallback logging for unexpected database and general exceptions.&#10;- Adjust ordering logic by removing redundant ID case." />
    <MESSAGE value="Update `Insomnia.yaml` endpoints with modified parameters and sample data:&#10;&#10;- Adjust `Get all` endpoint query parameters (`pagenumber`, `idprofile`, and `minsalary`).&#10;- Update `Create` and `Update` employee request payloads with new profile and salary data.&#10;- Modify `Delete` endpoint to reflect updated employee ID." />
    <MESSAGE value="Improve `ProfileService` error handling and logging for `Update` and `Delete` operations:&#10;&#10;- Add detailed exception handling for SQL errors, including unique constraint and foreign key violations.&#10;- Introduce meaningful logging for database errors and unexpected exceptions.&#10;- Enhance user feedback with precise error messages." />
    <MESSAGE value="Enhance `UserService` error handling and logging:&#10;&#10;- Add detailed exception handling for SQL errors in `Update` and `Delete` methods, including unique constraint and foreign key violations.&#10;- Introduce `ILogger` dependency for improved logging.&#10;- Update user feedback with clear and comprehensive error messages.&#10;- Adjust ordering logic by removing redundant `ID` case in query." />
    <MESSAGE value="Add `OnDelete.Restrict` to `Employee` foreign key with `Profile`:&#10;&#10;- Updated `Employee`-`Profile` FK to use `Restrict` behavior instead of `Cascade`.&#10;- Modified `AppDbContext` and related EF Core migration files to reflect this change.&#10;- Adjusted `AppDbContextModelSnapshot` for FK update." />
    <MESSAGE value="Implement service interfaces for `ProfileService`, `UserService`, and `EmployeeService`:&#10;&#10;- Define `IProfileService`, `IUserService`, and `IEmployeeService` interfaces for service abstraction.&#10;- Update corresponding controllers to depend on interfaces instead of concrete implementations.&#10;- Refactor `Program.cs` to register services with their interfaces.&#10;- Adjust service classes to implement their respective interfaces for better dependency injection support." />
    <MESSAGE value="Refactor `AuthService` to implement `IAuthService` and update dependency injection:&#10;&#10;- Introduce `IAuthService` interface for `AuthService` to improve dependency injection and abstraction.&#10;- Update `AuthController` to depend on `IAuthService` instead of the concrete `AuthService` implementation.&#10;- Modify `Program.cs` to register `AuthService` with `IAuthService`." />
    <MESSAGE value="Implement `IAuthService` interface:&#10;&#10;- Define `IAuthService` interface to abstract authentication logic.&#10;- Refactor `AuthController` and `AuthService` to utilize `IAuthService` for improved dependency injection.&#10;- Register `IAuthService` with `AuthService` in `Program.cs`." />
    <MESSAGE value="Add Swagger for API documentation:&#10;&#10;- Integrate `Swashbuckle.AspNetCore` package for Swagger support.&#10;- Configure Swagger with JWT authentication via `AddSwaggerGen`.&#10;- Replace `AddOpenApi` with detailed Swagger setup.&#10;- Enable Swagger and Swagger UI in Development environment.&#10;- Update README to reflect Swagger implementation." />
    <MESSAGE value="Add two folder, crud-api and crud-api.UnitTests. Divide behavior and change responsabilities, add new solution (.sln)" />
    <option name="LAST_COMMIT_MESSAGE" value="Add two folder, crud-api and crud-api.UnitTests. Divide behavior and change responsabilities, add new solution (.sln)" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="DotNet_Exception_Breakpoints">
          <properties exception="System.OperationCanceledException" breakIfHandledByOtherCode="false" displayValue="System.OperationCanceledException" />
          <option name="timeStamp" value="1" />
        </breakpoint>
        <breakpoint enabled="true" type="DotNet_Exception_Breakpoints">
          <properties exception="System.Threading.Tasks.TaskCanceledException" breakIfHandledByOtherCode="false" displayValue="System.Threading.Tasks.TaskCanceledException" />
          <option name="timeStamp" value="2" />
        </breakpoint>
        <breakpoint enabled="true" type="DotNet_Exception_Breakpoints">
          <properties exception="System.Threading.ThreadAbortException" breakIfHandledByOtherCode="false" displayValue="System.Threading.ThreadAbortException" />
          <option name="timeStamp" value="3" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>